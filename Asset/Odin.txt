12-7 odin
인스펙터창 꾸미는거임

*SERIALIZE 는 EDITORONLY 모드에서만 사용하자 ( 빌드시 오류 날수도있음

선언
using Sirenix.OdinInspector;


1.에셋리스트

1.1path : [AssetList(Path="Resources/Prefab")] 처럼하면 알아서 리스트로나옴

1.2tag : [AssetList(Tags = "testtag")] 하면 특정 tag 친구들만 저장됨


2.BoxGroup
[BoxGroup("Goup")] public int a 하면 하나로 묶임
[BoxGroup("Goup")] public int b
[BoxGroup("Goup")] public int c

2.1 FlodoutGroup : 끄고 키고 할수있음 개좋음이거 쓰자
private const string googleaname="googlea";
private const string googleaname2="googleb";
[FoldoutGroup(googleaname)] public string a;
[FoldoutGroup(googleaname)]public string b;
[FoldoutGroup(googleaname)]public string c;    
[FoldoutGroup(googleaname2)]public string d;
[FoldoutGroup(googleaname2)]public string e;
[FoldoutGroup(googleaname2)]public string f;



3. onvaluechaged : 값이 바뀌면 함수 실행함 
[OnValueChanged("methodname")] public string a;  함수 바뀌면


4.taggroup : 인스펙터창 위에 더크게 하나로 묶을 수있음 와따가따 거리면서 포게 필드랑 오브젝트 구별정도할듯
private const string GoogleName = "google1";
private const string GoogleName2 = "google2";
[TabGroup(GoogleName)] public int a;
[TabGroup(GoogleName)]  public int b;
[TabGroup(GoogleName)] public int c;    
[TabGroup(GoogleName2)] public int e;
[TabGroup(GoogleName2)] public int f;
[TabGroup(GoogleName2)] public int g;


5. Mono 대신 SerializedMonoBehaviour 상속하면 Interface, Generic, NullableType, Delegates, Dictionary, Stack, Queue 표현가능


6.Button :인스팩터장에서 함수를 사용할수있다 [저장 디버깅용 넣으면 편함]
[Button]
void AA()
{
	Debug.Log("5");
}
